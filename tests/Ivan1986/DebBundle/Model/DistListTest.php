<?php
namespace Tests\Ivan1986\DebBundle\Model;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-06-26 at 11:04:54.
 */
use Ivan1986\DebBundle\Model\DistList;

class DistListTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var DistList
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new DistList;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function providerLists()
    {
        return array(
            array(array('lucid', 'maverick', 'natty'), array('lts'=>'lucid', 'stable'=>'maverick', 'testing'=>'natty'), 'lucid', 'maverick', 'natty'),
            array(array('lucid'), array('lts'=>'lucid', 'stable'=>'maverick', 'testing'=>'natty'), 'lucid', 'lucid', 'lucid'),
            array(array('lucid', 'maverick', 'natty', 'oneiric'), array('lts'=>'lucid', 'stable'=>'maverick', 'testing'=>'natty'), 'lucid', 'maverick', 'natty'),
            array(array('lucid', 'maverick'), array('lts'=>'lucid', 'stable'=>'maverick', 'testing'=>'natty'), 'lucid', 'maverick', 'maverick'),
            array(array('karmic'), array('lts'=>'lucid', 'stable'=>'maverick', 'testing'=>'natty'), 'karmic', 'karmic', 'karmic'),
            array(array('karmic', 'maverick'), array('lts'=>'lucid', 'stable'=>'maverick', 'testing'=>'natty'), 'karmic', 'maverick', 'maverick'),
        );
    }

    /**
     * @covers Ivan1986\DebBundle\Model\DistList::update
     * @dataProvider providerLists
     */
    public function testUpdate($inPpa, $current, $lts, $stable, $testing)
    {
        $res = $this->object->update($inPpa, $current);
        $this->assertTrue($res instanceof DistList);
        $this->assertEquals($res->lts, $lts);
        $this->assertEquals($res->stable, $stable);
        $this->assertEquals($res->testing, $testing);
    }
}
