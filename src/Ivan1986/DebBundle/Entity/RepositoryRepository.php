<?php

namespace Ivan1986\DebBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * RepositoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RepositoryRepository extends EntityRepository
{

    /**
     * Получить все репозитории
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getAllQB()
    {
        return $this->createQueryBuilder('r');
    }

    /**
     * Получить для пользователя
     *
     * @param User $user
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getByUser(User $user=null)
    {
        $qb = $this->createQueryBuilder('r');
        if ($user)
            $qb->where('r.owner = ?1')->setParameter(1, $user->getId());
        return $qb;
    }

    /**
     * Получить по ID с проверкой пользователя
     *
     * @param $id ID репозитория
     * @param User $user пользователь
     * @return object
     */
    public function getByIdAndCheckUser($id, User $user)
    {
        return $this->findOneBy(array('id' => $id, 'owner' => $user->getId()));
    }

    public function getNewAndUpdated()
    {
        $qb = $this->createQueryBuilder('r');
        $qb->select('r, p');
        $qb->leftJoin('r.packages', 'p');
        $qb->where('p.id IS NULL');
        $qb->orWhere('p.created < r.updated');
        return $qb->getQuery()->getResult();
    }

    public function getPpaForScan($onlyNew)
    {
        $qb = $this->createQueryBuilder('r');
        $qb->select('r');
        if ($onlyNew)
            $qb
                ->where('r.distrs IS NULL')
                ->orWhere('r.distrs = :null')->setParameter('null', serialize(null));
        return $qb->getQuery()->getResult();
    }


}